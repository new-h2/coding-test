# https://www.acmicpc.net/problem/5585
# 5585. 거스름돈 [브론즈2]
# 알고리즘 분류 : 그리디
# 걸린시간:
# [ 그리디 알고리즘으로 푼 근거 및 회고 ] 
# 가장 적은 잔돈의 갯수 

# 문제를 읽고 실제로 계산해보기 (문제이해)
# [파이썬]으로 어떻게 표현하지?
# 알고리즘을 선택한 이유 (어떤 알고리즘으로 )

# 노트에 흐름을 적어보기 
N = 1000 - int(input())
answer = 0;
arr = [500,100,50,10,5,1];
for i in arr:
    if N//i > 0: 
        answer += N//i;
    N = N % i
print(answer);


# 고민

# 1000 - 380(입력값) = N(내야할 돈)

# N = 380 => 620 
# 500원 짜리 1개 (N/500)
# 100원 짜리 1개 (N%500)/100
# 10원 짜리 2개 (N%100)/10

# N = 1 => 999
# 500원 짜리 1개 
# 100원 짜리 4개
# 50원 짜리 1개 
# 10원 짜리 4개
# 5원 짜리 1개
# 1원 짜리 4개
# / % -> 나눈것의 몫들의 합
# 다 더하면??

# for 문을 돌면서 if /500 있으면 100으로 나눌수 있으면 이렇게 해야하나?
# N = int(input())
# import math
# N = 620
# answer =0
# if타면 끝나니까? while?을 써야하나??
# while( N != 0):  # 나머지가 0일때 까지 돌아야하니까
#    if N/500 > 0:   # if N // 500 > 0:      True 1 False 0
#        answer += N//500
#        N = N%500
#    if N//100 > 0:
#        answer += N//100
#        N = N%100
#    if N//50  > 0:
#        answer += N//50
#        N = N%50
#    if N//10  > 0:
#        answer += N//10
#        N = N%10
#    if N//5 > 0:
#        answer += N//5
#        N = N%5
#    if N//1 > 0:
#        answer += N//1
#        N = N%1
#    print(answer)
# 4.84 나옴...정수만 필요해
# trunc 
# math.trunc(answer)
# print(math.trunc(answer));
# 파이썬은 //나누기 두개 하면 정수만 나옴 ㅠㅠ

# 틀렸습니다...??????? 
# 같은 공식이니까 단순하게 줄일 수 있을 것 같아
# 인덱스에 값을 넣어서 나눌 값을 변경하자
# N = 380 
# answer =0
# arr = [500,100,50,10,5,1]
# for i in arr:
#    if N//i:  
#        answer += N//i
#        N = N % i
# print(answer)
# 왜 그리디 ? 최소, 최선에 속하는 알고리즘은 그리디다
# 순간마다 최선, 하지만 무조건 최적의 해는 아니다 
# 최소 != 그리디 기억하기
# 브루트포스 무식한 = 완전 탐색 중에 하나 
